// This file was automatically generated by lister-gen

package internalversion

import (
	oauth "github.com/openshift/origin/pkg/oauth/apis/oauth"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OAuthAccessTokenRequestLister helps list OAuthAccessTokenRequests.
type OAuthAccessTokenRequestLister interface {
	// List lists all OAuthAccessTokenRequests in the indexer.
	List(selector labels.Selector) (ret []*oauth.OAuthAccessTokenRequest, err error)
	// Get retrieves the OAuthAccessTokenRequest from the index for a given name.
	Get(name string) (*oauth.OAuthAccessTokenRequest, error)
	OAuthAccessTokenRequestListerExpansion
}

// oAuthAccessTokenRequestLister implements the OAuthAccessTokenRequestLister interface.
type oAuthAccessTokenRequestLister struct {
	indexer cache.Indexer
}

// NewOAuthAccessTokenRequestLister returns a new OAuthAccessTokenRequestLister.
func NewOAuthAccessTokenRequestLister(indexer cache.Indexer) OAuthAccessTokenRequestLister {
	return &oAuthAccessTokenRequestLister{indexer: indexer}
}

// List lists all OAuthAccessTokenRequests in the indexer.
func (s *oAuthAccessTokenRequestLister) List(selector labels.Selector) (ret []*oauth.OAuthAccessTokenRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*oauth.OAuthAccessTokenRequest))
	})
	return ret, err
}

// Get retrieves the OAuthAccessTokenRequest from the index for a given name.
func (s *oAuthAccessTokenRequestLister) Get(name string) (*oauth.OAuthAccessTokenRequest, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(oauth.Resource("oauthaccesstokenrequest"), name)
	}
	return obj.(*oauth.OAuthAccessTokenRequest), nil
}
